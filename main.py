from sudoku import Sudoku, create_branch


def main():
    sdk = Sudoku()

    # sdk.create_board([[0,0,0,0,9,7,0,6,0],[1,0,7,0,0,0,0,0,0],[0,0,3,0,0,0,4,9,0],[3,0,0,4,0,8,0,7,0],[9,0,0,0,2,0,0,0,3],[0,0,0,9,0,1,0,0,5],[0,1,8,0,0,0,7,0,0],[0,0,0,0,0,0,8,0,4],[0,0,0,8,5,0,0,0,0]])
    # sdk.create_board([[0,0,0,0,0,8,7,0,0],[0,9,0,0,2,0,0,6,0],[4,0,8,0,0,0,2,0,0],[5,0,0,0,4,0,0,0,0],[0,8,0,7,6,1,0,5,0],[0,0,0,0,5,0,0,0,9],[0,0,3,0,0,0,4,0,6],[0,7,0,0,9,0,0,2,0],[0,0,6,4,0,0,0,0,0]])
    # sdk.create_board([[0,5,3,0,4,0,0,0,0],[0,0,0,0,8,0,0,0,6],[0,0,4,6,0,0,2,0,7],[0,0,0,0,0,0,5,0,0],[5,4,0,0,6,0,0,8,3],[0,0,9,0,0,0,0,0,0],[8,0,7,0,0,9,6,0,0],[9,0,0,0,2,0,0,0,0],[0,0,0,0,3,0,1,9,0]])
    # sdk.create_board([[0,0,3,0,5,1,0,0,0],[0,0,0,0,8,0,3,0,0],[5,0,0,0,0,9,0,1,0],[0,0,0,0,0,0,1,0,7],[8,4,0,0,7,0,0,2,3],[9,0,6,0,0,0,0,0,0],[0,9,0,1,0,0,0,0,6],[0,0,7,0,6,0,0,0,0],[0,0,0,5,3,0,8,0,0]])
    sdk.create_board([[0,0,5,3,0,0,0,0,0],[8,0,0,0,0,0,0,2,0],[0,7,0,0,1,0,5,0,0],[4,0,0,0,0,5,3,0,0],[0,1,0,0,7,0,0,0,6],[0,0,3,2,0,0,0,8,0],[0,6,0,5,0,0,0,0,9],[0,0,4,0,0,0,0,3,0],[0,0,0,0,0,9,7,0,0]])

    print("\nInitial board:")
    sdk.print()

    for t in range(1000):
        
        sdk.check_everything()
        if sdk.check_completed_board():
            sdk.print()
            print("\nMission successful!\n")
            break
        
        print(f"\nAlternative try #{t}:")
        sdk.print()
        
        (resolved, moves) = create_branch(sdk, [])
        if resolved:
            print(moves)
            for (r,c,v) in moves:
                sdk.put(r,c,v)
                sdk.check_everything()


if __name__ == '__main__':
    main()
